{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","myStyle","setStyle","useState","color","backgroundColor","btnText","changeTxt","React","createElement","className","style","id","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","data-bs-parent","onClick","toggleStyle","border","Navbar","props","data-bs-theme","concat","mode","Link","to","title","aria-label","aria-current","role","placeholder","toggleMode","htmlFor","TextForm","text","setText","copyBtnText","setCopyBtnText","characters","length","words","split","charAt","Fragment","heading","rows","value","onChange","event","console","log","target","handleUpChange","newText","toUpperCase","showAlert","handleLowChange","toLowerCase","handleClearChange","handleCopy","copiedText","document","getElementById","select","navigator","clipboard","writeText","setTimeout","handleExtraSpaces","join","handleSentenceCase","map","sentence","slice","Alert","alert","class","word","lower","capitalize","msg","data-bs-dismiss","App","setMode","setAlert","message","Router","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.47788601.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n    const [myStyle, setStyle] = useState({\r\n        color: \"black\",\r\n        backgroundColor: \"white\"\r\n    })\r\n\r\n    const[btnText,changeTxt] = useState(\"Enable Dark mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(myStyle.color === 'white'){\r\n            setStyle({\r\n                color: \"black\",\r\n                backgroundColor: \"white\"\r\n            })\r\n            changeTxt(\"Enable Dark mode\")\r\n            \r\n        }\r\n        else{\r\n            setStyle({\r\n                color: \"white\",\r\n                backgroundColor: \"black\",\r\n                border: '1px solid white'\r\n            })\r\n            changeTxt(\"Enable Light mode\")\r\n            \r\n        }\r\n    }\r\n  return (\r\n        <div className=\"container\" style={myStyle}>\r\n            <h1 className=\"my-2\">About us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n        <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n            Accordion Item #1\r\n            </button>\r\n        </h2>\r\n        <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n            <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n        <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" style={myStyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n            Accordion Item #2\r\n            </button>\r\n        </h2>\r\n        <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n            <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"accordion-item\" style={myStyle}>\r\n        <h2 className=\"accordion-header\">\r\n            <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n            Accordion Item #3\r\n            </button>\r\n        </h2>\r\n        <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n            <div className=\"accordion-body\">\r\n            <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n            </div>\r\n        </div>\r\n        </div>\r\n        </div>\r\n        <div className=\"container\">\r\n        <button onClick={toggleStyle} className=\"btn btn-success mx-2 my-2\" >\r\n        {btnText}\r\n      </button>\r\n        </div>\r\n        </div>\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\" data-bs-theme={`${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <Link className=\"navbar-brand\" to=\"/\">\r\n            {props.title}\r\n          </Link>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                  Home\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/about\">\r\n                  About\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form>\r\n            <div className={`form-check form-switch  mx-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n            {/* <div className=\"form-check form-switch mx-3 text-dark\"> */}\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>  \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\n// Navbar.defaultProps = {\r\n//   title: \"Set-title-here\",\r\n// };\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n    \r\n  const handleUpChange = () => {\r\n    console.log(\"You have clicked on handleUpClick\");\r\n    const newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    if(text.length === 0){\r\n      props.showAlert(\"There is no text to convert\",\"warning\");\r\n    }\r\n  };\r\n\r\n  const handleLowChange = () => {\r\n    console.log(\"You have clicked on handleUpClick\");\r\n    const newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    if(text.length === 0){\r\n      props.showAlert(\"There is no text to convert\",\"warning\");\r\n    }\r\n  };\r\n\r\n  const handleClearChange = () => {\r\n    console.log(\"You have clicked on handleClearClick\");\r\n    const newText = \"\";\r\n    setText(newText);\r\n    \r\n  };\r\n  \r\n  const handleCopy = ()=>{\r\n    console.log(\"You clicked on Copy button\");\r\n    var copiedText = document.getElementById('myBox');\r\n    copiedText.select();\r\n    navigator.clipboard.writeText(copiedText.value);\r\n    setCopyBtnText(\"Copied to clipboard\");\r\n    // Reset the button text after 2 seconds\r\n  setTimeout(() => {\r\n    setCopyBtnText(\"Copy\");\r\n  }, 800);\r\n\r\n  }\r\n\r\n  const handleExtraSpaces = ()=>{\r\n    console.log(\"You clicked on Clear Extra Spaces\");\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"Extra Spaces removed !\",\"success\");\r\n    if(text.length === 0){\r\n      props.showAlert(\"There is no text to convert\",\"warning\");\r\n    }\r\n  }\r\n\r\n  const handleSentenceCase = () => {\r\n    console.log(\"You clicked on Capitalize Sentence Case\");\r\n    // Split the text into sentences based on full stops\r\n    let sentences = text.split('. ');\r\n    let newText = sentences.map(sentence => {\r\n      // Trim to remove extra spaces and capitalize the first letter of each sentence\r\n      return sentence.charAt(0).toUpperCase() + sentence.slice(1);\r\n    }).join('. ');\r\n    setText(newText);\r\n    props.showAlert(\"Capitalised the first letter of every sentence\",\"success\");\r\n    if(text.length === 0){\r\n      props.showAlert(\"There is no text to convert\",\"warning\");\r\n    }\r\n  };\r\n  \r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"OnChange\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [copyBtnText, setCopyBtnText] = useState(\"Copy\");\r\n\r\n  const characters = text.length;\r\n\r\n  let words = text.split(\" \").length;\r\n  if(characters === 0 || text.charAt(text.length-1)===\" \"){\r\n    words = words-1;\r\n  }\r\n  return (\r\n    <>\r\n\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h1 className=\"my-3\">{props.heading}</h1>\r\n      <textarea style={{backgroundColor: props.mode==='dark'?'#495057':'white', color: props.mode==='dark'?'white':'black'}}\r\n        className=\"form-control my-2\"\r\n        id=\"myBox\"\r\n        rows=\"8\"\r\n        value={text}\r\n        onChange={handleOnChange}\r\n      ></textarea>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleUpChange}>\r\n        Convert to Uppercase\r\n      </button>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleLowChange}>\r\n        Convert to Lowercase\r\n      </button>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleClearChange}>\r\n        Clear Text\r\n      </button>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleCopy}>\r\n        {copyBtnText}\r\n      </button>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleExtraSpaces}>\r\n        Remove Extra Spaces\r\n      </button>\r\n      <button className=\"btn btn-success mx-2 my-2\" onClick={handleSentenceCase}>\r\n        Capitalise Sentences\r\n      </button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n      <h2>Your Text Sumamry</h2>\r\n      \r\n      <p>{words} words and {characters} characters</p>\r\n      <p>{words/125} Minutes to read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text.length>0?text:\"Enter something in the text box above to preview it here.\"}</p>\r\n    </div>\r\n\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    props.alert && <div>\r\n       <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n         <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from \"react\";\nimport { useState} from \"react\";\nimport \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes\n} from \"react-router-dom\";\n\nfunction App() {\n  const[mode, setMode] = useState('light');\n\n  const[alert, setAlert] = useState(null);\n\n  const showAlert = (message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    }\n    )\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n    \n  }\n\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor=\"#495057\";\n      showAlert(\"Dark mode is Enabled\",\"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor=\"white\";\n      showAlert(\"Light mode is Enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    <Router>\n      <Navbar title=\"TextUtils\"  mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n        \n      <Routes>\n            <Route exact path=\"/about\" element={<About />}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm heading=\"Enter text to analyze\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n        \n      </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}